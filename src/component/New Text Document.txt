@page "/PlantDetail/Detail/{id}"
@model Plantpedia.Pages.Plant.DetailsModel
@using System.Security.Claims

@{
    ViewData["Title"] = "Chi tiết cây trồng";
}

@Html.AntiForgeryToken()

@section Styles {
    <link rel="stylesheet" href="~/css/detail-page.css" asp-append-version="true" />
}

<main class="container my-5">
    <!-- Error Alert -->
    <div id="errorAlert" class="alert alert-danger d-none" role="alert">
        <i class="fas fa-exclamation-circle"></i>
        <span id="errorMessage"></span>
    </div>

    <!-- Plant Content -->
    <div id="plantContent" class="d-none">
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb bg-white p-3 rounded shadow-sm">
                <li class="breadcrumb-item">
                    <a href="/" class="text-success">
                        <i class="fas fa-home"></i> Trang chủ
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a href="/plants" class="text-success">Cây trồng</a>
                </li>
                <li class="breadcrumb-item active" id="breadcrumbName">Chi tiết</li>
            </ol>
        </nav>

        <div class="row">
            <!-- Image Gallery -->
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm border-0">
                    <div class="card-body p-3">
                        <img id="mainImage" 
                             src="~/images/placeholder.png" 
                             class="img-fluid rounded main-image" 
                             alt="Ảnh chính">
                    </div>
                </div>
                <div id="thumbnailContainer" class="row g-2 mt-2"></div>
            </div>

            <!-- Plant Information -->
            <div class="col-lg-6 mb-4">
                <div class="card shadow-sm border-0 h-100">
                    <div class="card-body p-4">
                        <h1 id="plantCommonName" class="h2 fw-bold text-dark mb-2"></h1>
                        <p class="text-muted fst-italic mb-3">
                            <i class="fas fa-flask"></i>
                            <span id="plantScientificName"></span>
                        </p>

                        <div id="badgesContainer" class="mb-4"></div>

                        <div class="description-box p-3 bg-light rounded mb-4">
                            <h5 class="text-success mb-3">
                                <i class="fas fa-info-circle"></i> Mô tả
                            </h5>
                            <p id="plantDescription" class="mb-0"></p>
                        </div>

                        <div id="quickInfoContainer" class="row g-3"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tabs Section -->
        <div class="card shadow-sm border-0 mt-4">
            <div class="card-header bg-white border-0">
                <ul class="nav nav-tabs card-header-tabs" id="plantTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" 
                                id="careTab" 
                                data-bs-toggle="tab" 
                                data-bs-target="#care" 
                                type="button" 
                                role="tab">
                            <i class="fas fa-hand-holding-water"></i> Chăm sóc
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" 
                                id="regionTab" 
                                data-bs-toggle="tab" 
                                data-bs-target="#region" 
                                type="button" 
                                role="tab">
                            <i class="fas fa-map-marked-alt"></i> Vùng trồng
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" 
                                id="soilTab" 
                                data-bs-toggle="tab" 
                                data-bs-target="#soil" 
                                type="button" 
                                role="tab">
                            <i class="fas fa-layer-group"></i> Loại đất
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" 
                                id="climateTab" 
                                data-bs-toggle="tab" 
                                data-bs-target="#climate" 
                                type="button" 
                                role="tab">
                            <i class="fas fa-cloud-sun"></i> Khí hậu
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" 
                                id="usageTab" 
                                data-bs-toggle="tab" 
                                data-bs-target="#usage" 
                                type="button" 
                                role="tab">
                            <i class="fas fa-utensils"></i> Mục đích
                        </button>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="plantTabsContent">
                    <div class="tab-pane fade show active" id="care" role="tabpanel">
                        <h5 class="text-success mb-4">
                            <i class="fas fa-spa"></i> Hướng dẫn chăm sóc chi tiết
                        </h5>
                        <dl id="careList" class="row mb-0"></dl>
                    </div>
                    <div class="tab-pane fade" id="region" role="tabpanel">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-globe-asia"></i> Vùng trồng phù hợp
                        </h5>
                        <div id="regionContent"></div>
                    </div>
                    <div class="tab-pane fade" id="soil" role="tabpanel">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-mountain"></i> Loại đất thích hợp
                        </h5>
                        <div id="soilContent"></div>
                    </div>
                    <div class="tab-pane fade" id="climate" role="tabpanel">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-temperature-high"></i> Khí hậu phù hợp
                        </h5>
                        <div id="climateContent"></div>
                    </div>
                    <div class="tab-pane fade" id="usage" role="tabpanel">
                        <h5 class="text-success mb-3">
                            <i class="fas fa-tasks"></i> Mục đích sử dụng
                        </h5>
                        <div id="usageContent"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Comments Section -->
        <section class="mt-5" data-plant-id="@Model.PlantId">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <h4 class="mb-4">
                        <i class="fas fa-comments text-success"></i> Bình luận
                    </h4>

                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <div class="card bg-light border-0 mb-4">
                            <div class="card-body">
                                <h5 class="mb-3">
                                    <i class="fas fa-pencil-alt text-success"></i> 
                                    Viết bình luận
                                </h5>
                                <textarea id="commentContent" 
                                          class="form-control mb-3" 
                                          rows="4"
                                          placeholder="Chia sẻ ý kiến, kinh nghiệm của bạn về cây trồng này..."></textarea>
                                <div id="commentError" class="alert alert-danger d-none" role="alert"></div>
                                <button id="btnSubmitComment" class="btn btn-success">
                                    <i class="fas fa-paper-plane"></i> Gửi bình luận
                                </button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="card bg-light border-0 mb-4">
                            <div class="card-body text-center py-5">
                                <i class="fas fa-lock fa-3x text-success mb-3"></i>
                                <h5 class="mb-3">Đăng nhập để bình luận</h5>
                                <p class="text-muted mb-4">
                                    Vui lòng đăng nhập để chia sẻ ý kiến và trao đổi với cộng đồng
                                </p>
                                <a asp-page="/Auth/Login" 
                                   asp-route-ReturnUrl="@(Context.Request.Path + Context.Request.QueryString)"
                                   class="btn btn-success">
                                    <i class="fas fa-sign-in-alt"></i> Đăng nhập ngay
                                </a>
                            </div>
                        </div>
                    }

                    <div id="commentList"></div>
                </div>
            </div>
        </section>
    </div>
</main>

<!-- Comment Template -->
<template id="commentTemplate">
    <div class="comment-item card border-0 bg-light mb-3">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-start mb-2">
                <div class="d-flex align-items-center">
                    <i class="fas fa-user-circle fa-2x text-success me-2"></i>
                    <div>
                        <strong class="comment-author d-block"></strong>
                        <small class="comment-date text-muted"></small>
                    </div>
                </div>
                <button class="btn btn-sm btn-outline-success btn-react" type="button">
                    <i class="fas fa-seedling"></i>
                    <span class="react-count ms-1">0</span>
                </button>
            </div>
            <p class="comment-text mb-2"></p>
            <button class="btn btn-sm btn-link text-success p-0 btn-reply" type="button">
                <i class="fas fa-reply"></i> Trả lời
            </button>
        </div>
    </div>
</template>

@section Scripts {
    <script src="~/js/detail-page.js" asp-append-version="true"></script>
}

// detail-page.js
(function () {
    'use strict';

    // ==================== CONSTANTS ====================
    const ENUM_LABELS = {
        LightRequirement: ['Ít ánh sáng', 'Ánh sáng vừa', 'Ánh sáng đầy đủ', 'Ánh sáng mạnh'],
        WateringNeeds: ['Thấp', 'Trung bình', 'Cao', 'Rất cao'],
        HumidityPreference: ['Thấp', 'Trung bình', 'Cao'],
        GrowthRate: ['Chậm', 'Trung bình', 'Nhanh']
    };

    const ENUM_ICONS = {
        LightRequirement: ['fa-moon', 'fa-cloud-sun', 'fa-sun', 'fa-sun'],
        WateringNeeds: ['fa-tint', 'fa-tint', 'fa-tint', 'fa-tint'],
        HumidityPreference: ['fa-droplet', 'fa-droplet', 'fa-droplet'],
        GrowthRate: ['fa-seedling', 'fa-chart-line', 'fa-rocket']
    };

    // ==================== DOM ELEMENTS ====================
    const elements = {
        errorAlert: document.getElementById('errorAlert'),
        errorMessage: document.getElementById('errorMessage'),
        plantContent: document.getElementById('plantContent'),
        breadcrumbName: document.getElementById('breadcrumbName'),
        mainImage: document.getElementById('mainImage'),
        thumbnailContainer: document.getElementById('thumbnailContainer'),
        plantCommonName: document.getElementById('plantCommonName'),
        plantScientificName: document.getElementById('plantScientificName'),
        badgesContainer: document.getElementById('badgesContainer'),
        plantDescription: document.getElementById('plantDescription'),
        quickInfoContainer: document.getElementById('quickInfoContainer'),
        careList: document.getElementById('careList'),
        regionContent: document.getElementById('regionContent'),
        soilContent: document.getElementById('soilContent'),
        climateContent: document.getElementById('climateContent'),
        usageContent: document.getElementById('usageContent')
    };

    // ==================== UTILITY FUNCTIONS ====================
    function getPlantIdFromUrl() {
        const pathParts = window.location.pathname.split('/');
        return pathParts[pathParts.length - 1];
    }

    function showError(message) {
        elements.errorMessage.textContent = message;
        elements.errorAlert.classList.remove('d-none');
        elements.plantContent.classList.add('d-none');
    }

    function hideError() {
        elements.errorAlert.classList.add('d-none');
    }

    function getEnumLabel(enumType, value) {
        return ENUM_LABELS[enumType]?.[value] || 'N/A';
    }

    function getEnumIcon(enumType, value) {
        return ENUM_ICONS[enumType]?.[value] || 'fa-circle';
    }

    function createBadge(text, icon = '') {
        const iconHtml = icon ? `<i class="fas ${icon} me-1"></i>` : '';
        return `<span class="badge bg-success me-2 mb-2">${iconHtml}${text}</span>`;
    }

    function createQuickInfoCard(icon, label, value) {
        return `
            <div class="col-md-6 mb-3">
                <div class="quick-info-card p-3 rounded bg-light h-100">
                    <div class="d-flex align-items-center">
                        <i class="fas ${icon} fa-2x text-success me-3"></i>
                        <div>
                            <small class="text-muted d-block">${label}</small>
                            <strong class="text-dark">${value}</strong>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    function createCareItem(label, value) {
        return `
            <dt class="col-sm-4 mb-2">${label}</dt>
            <dd class="col-sm-8 mb-2 text-muted">${value}</dd>
        `;
    }

    function createTagList(items, emptyMessage = 'Chưa có thông tin') {
        if (!items || items.length === 0) {
            return `<p class="text-muted">${emptyMessage}</p>`;
        }
        
        const tags = items.map(item => 
            `<span class="badge bg-success-subtle text-success me-2 mb-2 px-3 py-2">${item}</span>`
        ).join('');
        
        return `<div class="tag-list">${tags}</div>`;
    }

    // ==================== RENDER FUNCTIONS ====================
    function renderBasicInfo(plant) {
        // Update title and breadcrumb
        document.title = `${plant.commonName} - Plantpedia`;
        elements.breadcrumbName.textContent = plant.commonName;
        
        // Update basic info
        elements.plantCommonName.textContent = plant.commonName || 'N/A';
        elements.plantScientificName.textContent = plant.scientificName || 'N/A';
        elements.plantDescription.textContent = plant.description || 'Chưa có mô tả chi tiết.';
    }

    function renderBadges(plant) {
        let badgesHtml = '';
        
        if (plant.plantTypeName) {
            badgesHtml += createBadge(plant.plantTypeName, 'fa-leaf');
        }
        
        if (plant.harvestDate) {
            badgesHtml += createBadge(`${plant.harvestDate} ngày`, 'fa-calendar-alt');
        }
        
        elements.badgesContainer.innerHTML = badgesHtml;
    }

    function renderImages(plant) {
        const images = plant.imageUrls && plant.imageUrls.length > 0 
            ? plant.imageUrls 
            : [plant.imageUrl].filter(Boolean);

        if (images.length === 0) {
            return;
        }

        // Set main image
        elements.mainImage.src = images[0];
        elements.mainImage.alt = plant.commonName;

        // Render thumbnails
        if (images.length > 1) {
            const thumbnailsHtml = images.map((url, index) => `
                <div class="col-3">
                    <img src="${url}" 
                         class="img-thumbnail thumbnail-image ${index === 0 ? 'active' : ''}" 
                         alt="Ảnh ${index + 1}"
                         data-image-url="${url}">
                </div>
            `).join('');
            
            elements.thumbnailContainer.innerHTML = thumbnailsHtml;
            
            // Add click handlers
            elements.thumbnailContainer.querySelectorAll('.thumbnail-image').forEach(thumb => {
                thumb.addEventListener('click', function() {
                    elements.mainImage.src = this.dataset.imageUrl;
                    elements.thumbnailContainer.querySelectorAll('.thumbnail-image').forEach(t => 
                        t.classList.remove('active')
                    );
                    this.classList.add('active');
                });
            });
        }
    }

    function renderQuickInfo(plant) {
        const quickInfo = [
            {
                icon: getEnumIcon('LightRequirement', plant.lightRequirement),
                label: 'Yêu cầu ánh sáng',
                value: getEnumLabel('LightRequirement', plant.lightRequirement)
            },
            {
                icon: getEnumIcon('WateringNeeds', plant.wateringNeeds),
                label: 'Nhu cầu tưới nước',
                value: getEnumLabel('WateringNeeds', plant.wateringNeeds)
            },
            {
                icon: getEnumIcon('HumidityPreference', plant.humidityPreference),
                label: 'Độ ẩm',
                value: getEnumLabel('HumidityPreference', plant.humidityPreference)
            },
            {
                icon: getEnumIcon('GrowthRate', plant.growthRate),
                label: 'Tốc độ phát triển',
                value: getEnumLabel('GrowthRate', plant.growthRate)
            }
        ];

        elements.quickInfoContainer.innerHTML = quickInfo
            .map(info => createQuickInfoCard(info.icon, info.label, info.value))
            .join('');
    }

    function renderCareTab(plant) {
        const careItems = [
            {
                label: 'Yêu cầu ánh sáng',
                value: getEnumLabel('LightRequirement', plant.lightRequirement)
            },
            {
                label: 'Nhu cầu tưới nước',
                value: getEnumLabel('WateringNeeds', plant.wateringNeeds)
            },
            {
                label: 'Độ ẩm',
                value: getEnumLabel('HumidityPreference', plant.humidityPreference)
            },
            {
                label: 'Tốc độ phát triển',
                value: getEnumLabel('GrowthRate', plant.growthRate)
            },
            {
                label: 'Khuyến nghị về đất',
                value: plant.soilRecommendation || 'Chưa có thông tin'
            },
            {
                label: 'Thông tin phân bón',
                value: plant.fertilizerInfo || 'Chưa có thông tin'
            }
        ];

        elements.careList.innerHTML = careItems
            .map(item => createCareItem(item.label, item.value))
            .join('');
    }

    function renderListTabs(plant) {
        elements.regionContent.innerHTML = createTagList(
            plant.regionNames, 
            'Chưa có thông tin về vùng trồng phù hợp.'
        );
        
        elements.soilContent.innerHTML = createTagList(
            plant.soilNames, 
            'Chưa có thông tin về loại đất phù hợp.'
        );
        
        elements.climateContent.innerHTML = createTagList(
            plant.climateNames, 
            'Chưa có thông tin về khí hậu phù hợp.'
        );
        
        elements.usageContent.innerHTML = createTagList(
            plant.usageNames, 
            'Chưa có thông tin về mục đích sử dụng.'
        );
    }

    function renderPlantData(plant) {
        renderBasicInfo(plant);
        renderBadges(plant);
        renderImages(plant);
        renderQuickInfo(plant);
        renderCareTab(plant);
        renderListTabs(plant);

        // Show content
        hideError();
        elements.plantContent.classList.remove('d-none');
    }

    // ==================== API FUNCTIONS ====================
    async function fetchPlantData(plantId) {
        try {
            const response = await fetch(`/api/Plant/${plantId}`);

            if (!response.ok) {
                if (response.status === 404) {
                    throw new Error('Không tìm thấy thông tin cây trồng này.');
                } else if (response.status === 400) {
                    throw new Error('Yêu cầu không hợp lệ.');
                } else {
                    throw new Error('Có lỗi xảy ra khi tải dữ liệu.');
                }
            }

            const data = await response.json();
            return data;
        } catch (error) {
            if (error.message) {
                throw error;
            }
            throw new Error('Không thể kết nối đến máy chủ. Vui lòng kiểm tra kết nối internet.');
        }
    }

    // ==================== INITIALIZATION ====================
    async function init() {
        const plantId = getPlantIdFromUrl();

        if (!plantId) {
            showError('ID cây trồng không hợp lệ.');
            return;
        }

        try {
            const plant = await fetchPlantData(plantId);
            renderPlantData(plant);
        } catch (error) {
            console.error('Error loading plant data:', error);
            showError(error.message);
        }
    }

    // ==================== EVENT LISTENERS ====================
    document.addEventListener('DOMContentLoaded', init);

})();

/* ==================== MAIN IMAGE ==================== */
.main-image {
    width: 100%;
    height: 450px;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.main-image:hover {
    transform: scale(1.02);
}

/* ==================== THUMBNAILS ==================== */
.thumbnail-image {
    cursor: pointer;
    height: 100px;
    object-fit: cover;
    transition: all 0.3s ease;
    border: 3px solid transparent;
}

.thumbnail-image:hover {
    opacity: 0.8;
    transform: scale(1.05);
}

.thumbnail-image.active {
    border-color: #198754;
    opacity: 1;
}

/* ==================== BREADCRUMB ==================== */
.breadcrumb {
    background-color: #ffffff;
}

.breadcrumb-item + .breadcrumb-item::before {
    content: "›";
    font-size: 1.2em;
}

.breadcrumb a {
    text-decoration: none;
    transition: color 0.3s ease;
}

.breadcrumb a:hover {
    color: #146c43 !important;
}

/* ==================== BADGES ==================== */
.badge {
    font-weight: 500;
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
}

.badge.bg-success {
    background-color: #198754 !important;
}

.bg-success-subtle {
    background-color: #d1e7dd !important;
}

/* ==================== DESCRIPTION BOX ==================== */
.description-box {
    border-left: 4px solid #198754;
}

.description-box h5 {
    font-weight: 600;
}

/* ==================== QUICK INFO CARDS ==================== */
.quick-info-card {
    transition: all 0.3s ease;
    border: 2px solid #e9ecef;
}

.quick-info-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(25, 135, 84, 0.15);
    border-color: #198754;
}

/* ==================== TABS ==================== */
.nav-tabs {
    border-bottom: 2px solid #e9ecef;
}

.nav-tabs .nav-link {
    color: #6c757d;
    font-weight: 500;
    border: none;
    border-bottom: 3px solid transparent;
    transition: all 0.3s ease;
    padding: 1rem 1.5rem;
}

.nav-tabs .nav-link:hover {
    color: #198754;
    background-color: transparent;
    border-bottom-color: #198754;
}

.nav-tabs .nav-link.active {
    color: #198754;
    background-color: transparent;
    border-bottom-color: #198754;
}

.tab-content {
    animation: fadeIn 0.4s ease;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* ==================== CARE LIST ==================== */
#careList dt {
    font-weight: 600;
    color: #495057;
    padding: 0.75rem 0;
}

#careList dd {
    padding: 0.75rem 0;
    color: #6c757d;
    border-bottom: 1px solid #e9ecef;
}

#careList dd:last-child {
    border-bottom: none;
}

/* ==================== TAG LIST ==================== */
.tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.tag-list .badge {
    font-size: 0.95rem;
    padding: 0.6rem 1.2rem;
    transition: all 0.3s ease;
}

.tag-list .badge:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(25, 135, 84, 0.2);
}

/* ==================== COMMENTS SECTION ==================== */
.comment-item {
    transition: all 0.3s ease;
    border-left: 4px solid #198754 !important;
}

.comment-item:hover {
    transform: translateX(5px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
}

.comment-author {
    color: #198754;
    font-size: 1rem;
}

.comment-date {
    font-size: 0.85rem;
}

.comment-text {
    line-height: 1.7;
    color: #495057;
}

.btn-react {
    transition: all 0.3s ease;
    border-width: 2px;
}

.btn-react:hover,
.btn-react.active {
    background-color: #198754;
    border-color: #198754;
    color: white;
    transform: scale(1.05);
}

.btn-react i {
    transition: transform 0.3s ease;
}

.btn-react:hover i,
.btn-react.active i {
    transform: rotate(15deg) scale(1.1);
}

.btn-reply {
    font-weight: 500;
    text-decoration: none;
}

.btn-reply:hover {
    text-decoration: underline;
}

/* ==================== CARDS ==================== */
.card {
    transition: all 0.3s ease;
}

.card.shadow-sm {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08) !important;
}

.card:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12) !important